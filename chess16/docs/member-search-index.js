memberSearchIndex = [{"p":"pieces","c":"King","l":"addMap(int, int, Piece)","u":"addMap(int,int,pieces.Piece)"},{"p":"pieces","c":"Bishop","l":"Bishop(String, boolean, char)","u":"%3Cinit%3E(java.lang.String,boolean,char)"},{"p":"pieces","c":"King","l":"blackKingSideCastle(Board, int, int, int, int)","u":"blackKingSideCastle(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"King","l":"blackQueenSideCastle(Board, int, int, int, int)","u":"blackQueenSideCastle(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"Board","l":"board"},{"p":"pieces","c":"Board","l":"Board()","u":"%3Cinit%3E()"},{"p":"pieces","c":"Board","l":"buildCopy(Board)","u":"buildCopy(pieces.Board)"},{"p":"pieces","c":"Piece","l":"canThisPieceDie(Board)","u":"canThisPieceDie(pieces.Board)"},{"p":"pieces","c":"Bishop","l":"checkPiecesInPath(Board, int, int, int, int)","u":"checkPiecesInPath(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"Rook","l":"checkPiecesInPath(Board, int, int, int, int)","u":"checkPiecesInPath(pieces.Board,int,int,int,int)"},{"p":"chess","c":"Chess","l":"Chess()","u":"%3Cinit%3E()"},{"p":"pieces","c":"Piece","l":"columnMappings"},{"p":"pieces","c":"Queen","l":"diagonalCheckPiecesInPath(Board, int, int, int, int)","u":"diagonalCheckPiecesInPath(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"Piece","l":"diagonalKill(Board, int, int)","u":"diagonalKill(pieces.Board,int,int)"},{"p":"pieces","c":"Piece","l":"didItMove()"},{"p":"pieces","c":"Bishop","l":"distinct"},{"p":"pieces","c":"King","l":"generateKeys(Board)","u":"generateKeys(pieces.Board)"},{"p":"pieces","c":"King","l":"generateKeys(Board, King)","u":"generateKeys(pieces.Board,pieces.King)"},{"p":"pieces","c":"Board","l":"getBoard()"},{"p":"pieces","c":"Piece","l":"getColor()"},{"p":"pieces","c":"Bishop","l":"getDistinct()"},{"p":"pieces","c":"Board","l":"getPiece(String)","u":"getPiece(java.lang.String)"},{"p":"pieces","c":"Piece","l":"getPieceName()"},{"p":"pieces","c":"Board","l":"inRange(int, int)","u":"inRange(int,int)"},{"p":"pieces","c":"Bishop","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"King","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"Knight","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"Pawn","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"Piece","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"Queen","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"Rook","l":"isKingInCheck(Board)","u":"isKingInCheck(pieces.Board)"},{"p":"pieces","c":"King","l":"King(String, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,boolean,boolean)"},{"p":"pieces","c":"Knight","l":"Knight(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Piece","l":"knightKill(Board, int, int)","u":"knightKill(pieces.Board,int,int)"},{"p":"pieces","c":"Knight","l":"knightMovements(Board, int, int)","u":"knightMovements(pieces.Board,int,int)"},{"p":"chess","c":"Chess","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"pieces","c":"King","l":"map"},{"p":"pieces","c":"Pawn","l":"Pawn(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Pawn","l":"Pawn(String, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,boolean,boolean)"},{"p":"pieces","c":"Piece","l":"Piece(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Piece","l":"Piece(String, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,boolean,boolean)"},{"p":"pieces","c":"Board","l":"printBoard()"},{"p":"pieces","c":"Queen","l":"Queen(String, boolean)","u":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"pieces","c":"Rook","l":"Rook(String, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,boolean,boolean)"},{"p":"pieces","c":"Piece","l":"rowMappings"},{"p":"pieces","c":"Board","l":"setUpBoard()"},{"p":"pieces","c":"King","l":"simulateKingRadius(Board)","u":"simulateKingRadius(pieces.Board)"},{"p":"pieces","c":"Queen","l":"straightCheckPiecesInPath(Board, int, int, int, int)","u":"straightCheckPiecesInPath(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"Piece","l":"straightKill(Board, int, int)","u":"straightKill(pieces.Board,int,int)"},{"p":"pieces","c":"Bishop","l":"toString()"},{"p":"pieces","c":"King","l":"toString()"},{"p":"pieces","c":"Knight","l":"toString()"},{"p":"pieces","c":"Pawn","l":"toString()"},{"p":"pieces","c":"Queen","l":"toString()"},{"p":"pieces","c":"Rook","l":"toString()"},{"p":"pieces","c":"Bishop","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"King","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"Knight","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"Pawn","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"Piece","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"Queen","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"Rook","l":"validMove(Board, String)","u":"validMove(pieces.Board,java.lang.String)"},{"p":"pieces","c":"King","l":"whiteKingSideCastle(Board, int, int, int, int)","u":"whiteKingSideCastle(pieces.Board,int,int,int,int)"},{"p":"pieces","c":"King","l":"whiteQueenSideCastle(Board, int, int, int, int)","u":"whiteQueenSideCastle(pieces.Board,int,int,int,int)"}];updateSearchResults();